from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import Message, ReplyKeyboardRemove
from time import sleep

from handlers.users.status_web import user_date, user_all_count, user_lvl, user_pay
from keyboards.default import menu
from keyboards.default.menu import choice, info
from loader import dp
from states.verification_coupon import State_coupon

price_forecast = 1000
price_web_master = 1200
all_web = [1935538508, ]
lvl_web = {'aff': 0.2, 'new_web': 0.35, 'web': 0.3}
list_admin = [745832259, 869546657]


class Web_master:
    def __init__(self, user_id, user_name, user_date, user_all_count_invited=0, user_lvl='x1', render_lvl='web',
                 aff=None):
        self.user_id = user_id
        self.user_name = user_name
        self.user_date = user_date
        self.user_all_count_invited = user_all_count_invited
        self.user_count_invited = 0
        self.render_lvl = render_lvl
        self.user_pay = 0
        self.lvl = user_lvl
        self.aff = aff

    def profit_web(self, lvl):
        self.user_count_invited += 1
        self.user_all_count_invited += 1
        if self.aff == None:
            self.user_pay += 0.4 * price_forecast
        else:
            self.user_pay += lvl * price_forecast

    def paid_web(self):
        self.user_pay = 0
        self.user_count_invited = 0

    def __str__(self):
        return f'-----------------------Web_master---------------------------\n' \
               f'Name_web: {self.user_name}\nId_web: {self.user_id}\n' \
               f'Date_web: {self.user_date}\nLvl_web: {self.render_lvl}\n' \
               f'Total_user: {self.user_all_count_invited}  Now_user: {self.user_count_invited}\n' \
               f'Pay_web: {self.user_pay}\n' \
               f'Invited - {self.aff}'


class Affiliates(Web_master):

    def __init__(self, user_id, user_name, user_date):
        super().__init__(user_id=user_id, user_name=user_name, user_date=user_date, user_lvl='x1', render_lvl='web')
        self.web_count = 0
        self.total_web_invited = 0
        self.web_invited = 0
        self.pay_new_web = 0
        self.pay_act_web = 0
        self.total_pay = 0

    def profit_web(self, lvl):
        for web_master in list_web_master:
            if web_master.aff == self.user_id:
                self.total_web_invited += web_master.user_all_count_invited
                self.pay_act_web += web_master.user_all_count_invited * price_web_master * lvl

    def new_web_master(self, lvl):
        for web_master in list_web_master:
            if web_master.aff == self.user_id:
                self.web_count += 1
                self.pay_new_web += lvl * price_web_master



    def __str__(self):
        return f'-----------------------Affiliates---------------------------\n' \
               f'Name_web: {self.user_name}\nId_web: {self.user_id}\n' \
               f'Date_web: {self.user_date}\nLvl_web: {self.render_lvl}\n' \
               f'Total_user: {self.web_count}  Act_web: {self.total_web_invited}\n' \
               f'Pay_new_web: {self.pay_new_web}\n' \
               f'Pay_act_web: {self.pay_act_web}' \



list_affiliates = [
    Affiliates(user_id=1234, user_name='Test', user_date='08.10'),
    Affiliates(user_id=4321, user_name='Sasha', user_date='09.10')
]

list_web_master = [
    Web_master(user_id=1935538508, user_name='Misha', user_date='25.09', render_lvl='web', aff=4321),
    Web_master(user_id=1935538504, user_name='Dima', user_date='25.09', render_lvl='web', aff=4321),
    Web_master(user_id=1935538504, user_name='Dima', user_date='25.09', render_lvl='web', aff=4321),
    Web_master(user_id=1935538504, user_name='Test', user_date='25.09', render_lvl='web', aff=4321)

]


def activity_affiliates():
    for all_aff in list_affiliates:
        all_aff.profit_web(lvl=lvl_web['aff'])
        all_aff.new_web_master(lvl=lvl_web['new_web'])

    for aff in list_affiliates:
        print(aff.__str__())


def activity_web_master():
    list_web_master[0].profit_web(lvl=lvl_web['web'])
    list_web_master[0].profit_web(lvl=lvl_web['web'])
    list_web_master[0].profit_web(lvl=lvl_web['web'])
    list_web_master[0].profit_web(lvl=lvl_web['web'])
    list_web_master[-1].profit_web(lvl=lvl_web['web'])
    list_web_master[-1].profit_web(lvl=lvl_web['web'])
    list_web_master[-1].profit_web(lvl=lvl_web['web'])
    list_web_master[-1].profit_web(lvl=lvl_web['web'])

    for web in list_web_master:
        print(web.__str__())


def admin_trigger():
    web_total_pay = 0
    web_total = 0
    web_total_count_invited = 0
    aff_total_pay = 0
    aff_total = 0
    aff_total_count_invited = 0
    for web in list_web_master:
        web_total_pay += web.user_pay
        web_total_count_invited += web.user_all_count_invited
        web_total += 1

    for affiliates in list_affiliates:
        aff_total_pay += affiliates.user_pay
        aff_total_count_invited += affiliates.user_all_count_invited
        aff_total += 1

    print(f'\n--------Admin---------\n'
          f'\n-------Web-------\n'
          f'Total web: {web_total}\n'
          f'All invited: {web_total_count_invited}\n'
          f'Pay total: {web_total_pay}\n'
          f'\n-------Affiliates-------\n'
          f'Total affiliates: {aff_total}\n'
          f'All invited: {aff_total_count_invited}\n'
          f'Pay total: {aff_total_pay}\n')

    activity_web_master()
    activity_affiliates()


admin_trigger()


@dp.message_handler(Command('menu'))
async def show_menu(message: Message):
    await message.answer('–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?',
                         reply_markup=menu)


@dp.message_handler(Text(equals=['–ö—É–ø–∏—Ç—å FORECAST ‚úÖ', '–°—Ç–∞—Ç—å Web masterüî•',
                                 'INFO WEB‚ö†', ]))
async def get_food(message: Message):
    if message.text == 'INFO WEB‚ö†':
        await message.answer('–†–µ—à–∏–ª —Å—Ç–∞—Ç—å –í–µ–±–º–∞—Å—Ç–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ TRIGGER? –û—Ç–ª–∏—á–Ω–æ!\n'
                             '–¢–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª, –≤ \n'
                             '–∫–æ—Ç–æ—Ä–æ–º —Ç—ã –æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ \n'
                             '—Ç–≤–æ–µ–π –±—É–¥—É—â–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.‚úÖ\n'
                             '–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏! –° —É–≤–∞–∂–µ–Ω–∏–µ–º TRIGGER_TEAMS‚ùóÔ∏è\n'
                             'https://t.me/joinchat/sCVGkTC9ojs4YTMy',
                             reply_markup=ReplyKeyboardRemove())

    elif message.text == '–ö—É–ø–∏—Ç—å FORECAST ‚úÖ':
        await message.answer('‚ÑπÔ∏è –ü–æ–≥–æ–≤–æ—Ä–∏–º –æ –ø—Ä–æ–¥—É–∫—Ç–µ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞—à –ø—Ä–æ–µ–∫—Ç‚ùó\n'
                             '–ù–∞—à –ø—Ä–æ–¥—É–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π, –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π\n'
                             '–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–æ–±—ã—Ç–∏–π. –¢–æ–µ—Å—Ç—å, —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞,\n'
                             '–∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–ø–æ—Ä—Ç \n'
                             '–±–µ–∑ —Ä–∏—Å–∫–∞ —É–π—Ç–∏ –≤ –º–∏–Ω—É—Å‚ùóÔ∏è\n\n'
                             '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 2 - —É—Ö —Å—Ç–∞–≤–æ–∫,\n'
                             '—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Ç—É,\n'
                             '–∏–ª–∏ –∏–Ω—É—é –∫–æ–º–∞–Ω–¥—É, –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º,\n'
                             '–ø–æ–∑–≤–æ–ª—è—è –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å –≤–∞—à–∏–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏.\n\n'
                             '–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ - 1200‚ÇΩ. –ù–æ –µ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n'
                             '—Å–æ —Å–∫–∏–¥–∫–æ–π –≤ 15% –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥—è —Å–∫–∏–¥–æ—á–Ω—ã–π –ö–£–ü–û–ù ‚úÖ\n\n'
                             '–¢–∞–∫ –∂–µ —É –Ω–∞—Å –∏–º–µ–µ—Ç—Å—è VIP —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º \n'
                             '–ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –º–∞—Ç—á–∏.\n'
                             '–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ - 250‚ÇΩ ‚úÖ',
                             reply_markup=choice)

    elif message.text == '–°—Ç–∞—Ç—å Web masterüî•':
        await message.answer(f'{message.from_user.full_name}, '
                             f'–ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è‚ùóÔ∏è –¢—ã —Ä–µ—à–∏–ª —Å—Ç–∞—Ç—å –í–µ–±–º–∞—Å—Ç–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ TRIGGER.\n'
                             f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø—Ä–æ–µ–∫—Ç–∞,\n'
                             f'–ù–∞–ø–∏—à–∏ —Ñ—Ä–∞–∑—É "–•–æ—á—É —Å—Ç–∞—Ç—å –í–µ–±–º–∞—Å—Ç–µ—Ä–æ–º" –∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ\n'
                             f'–ù–∞ –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ @keepeero\n'
                             f'–¢–≤–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ - {message.from_user.id}\n'
                             f'–í —Ç–µ—á–µ–Ω–∏–∏ 10-15 –º–∏–Ω, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π ‚úÖ',
                             reply_markup=ReplyKeyboardRemove())



    else:
        await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!')


@dp.message_handler(Text(equals=['–ö—É–ø–∏—Ç—å 1200—Ä‚úÖ']))
async def buy_product(message: Message):
    if message.text == '–ö—É–ø–∏—Ç—å 1200—Ä‚úÖ':
        comment = message.from_user.username + "2e" + str(message.from_user.id)
        await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª –∫ –ø–æ–∫—É–ø–∫–µ –ø—Ä–æ–¥—É–∫—Ç FORECAST.\n\n'
                             f'–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ \n'
                             f'–≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç—É:\n'
                             f'4276 5209 6316 4385 ‚úÖ\n\n'
                             f'‚ùóÔ∏è–í–∞–∂–Ω–æ‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n'
                             f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É:\n'
                             f'{comment}\n–ò —É–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞–º–∏ \n–ø–∞–∫–µ—Ç–∞‚ùóÔ∏è\n'
                             f'‚ÑπÔ∏è–í –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Ç–≤–æ—è –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è\n'
                             f'–Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π ‚ÑπÔ∏è', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(Text(equals=['–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—É–ø–æ–Ω - 1000—Äüí£']), state=None)
async def buy_product_web(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫—É–ø–æ–Ω', reply_markup=ReplyKeyboardRemove())
    await State_coupon.answer_user.set()


@dp.message_handler(state=State_coupon.answer_user)
async def get_user_coupon(message: Message, state: FSMContext):
    answer_user = message.text
    await state.update_data(answer=answer_user)
    data = await state.get_data()
    user = data.get('answer')
    if user in str(all_web):
        comment_user = str(user) + 'Afc' + str(message.from_user.username)
        await message.answer('–¢–≤–æ–π –∫—É–ø–æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π!\n'
                             f'–¢—ã –≤—ã–±—Ä–∞–ª –∫ –ø–æ–∫—É–ø–∫–µ –ø—Ä–æ–¥—É–∫—Ç FORECAST.\n\n'
                             f'–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ \n'
                             f'–≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç—É:\n'
                             f'4276 5209 6316 4385 ‚úÖ\n\n'
                             f'‚ùóÔ∏è–í–∞–∂–Ω–æ‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n'
                             f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É:\n'
                             f'{comment_user}\n–ò —É–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞–º–∏ \n–ø–∞–∫–µ—Ç–∞‚ùóÔ∏è\n'
                             f'‚ÑπÔ∏è–í –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Ç–≤–æ—è –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è\n'
                             f'–Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π ‚ÑπÔ∏è', reply_markup=ReplyKeyboardRemove()
                             )
        await state.finish()
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ –∫—É–ø–æ–Ω–∞ –Ω–µ—Ç!')
        await state.finish()


@dp.message_handler(Command('status'))
async def show_status(message: Message):
    for web in list_web_master:
        if message.from_user.id == web.user_id:
            await message.answer(f'–¢–≤–æ–µ –∏–º—è - {message.from_user.full_name}\n'
                                 f'–¢–≤–æ–π id - {message.from_user.id}\n'
                                 f'–¢—ã –≤ –∫–æ–º–∞–Ω–¥–µ c {web.user_date}\n'
                                 f'–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - {web.user_all_count_invited}\n'
                                 f'–ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - {web.user_count_invited}\n'
                                 f'–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –≤ TRIGGER - {web.render_lvl}\n'
                                 f'–¢–≤–æ—è –≤—ã–ø–ª–∞—Ç–∞ - {web.user_pay}', reply_markup=ReplyKeyboardRemove())
            break
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç—ã –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º TRIGGER\n'
                             '–û–∑–Ω–∞–∫–æ–º—å—Å—è –∫–∞–∫ —Å—Ç–∞—Ç—å Web master –∏–∑ –ø—É–Ω–∫—Ç–∞ /menu')


@dp.message_handler(Command('admin'))
async def show_admin(message: Message):
    if message.from_user.id in list_admin:
        for web in list_web_master:
            await message.answer(web.__str__())
    else:
        await message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!\n'
                             '–¢—ã –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞')


@dp.message_handler(Text(equals=['VIP –∫–∞–Ω–∞–ª - 250—Äüîì']))
async def show_vip_channel(message: Message):
    comment = message.from_user.username + '2e' + str(message.from_user.id)
    await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª –∫ –ø–æ–∫—É–ø–∫–µ VIP —á–∞—Ç\n\n'
                         f'–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ \n'
                         f'–≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç—É:\n'
                         f'4276 5209 6316 4385 ‚úÖ\n\n'
                         f'‚ùóÔ∏è–í–∞–∂–Ω–æ‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n'
                         f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É:\n'
                         f'{comment}\n'
                         f'‚ÑπÔ∏è–í –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Ç–≤–æ—è –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è\n'
                         f'–Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π ‚ÑπÔ∏è',
                         reply_markup=ReplyKeyboardRemove())


@dp.message_handler(Text(equals=['–î–µ–º–æ FORECASTüî•']))
async def show_demo(message: Message):
    await message.answer('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.', reply_markup=ReplyKeyboardRemove())
